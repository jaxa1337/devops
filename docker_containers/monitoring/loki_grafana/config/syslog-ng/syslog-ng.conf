#############################################################################
# Default syslog-ng.conf file which collects all local logs into a
# single file called /var/log/messages tailored to container usage.
#
# The changes from the stock, default syslog-ng.conf file is that we've
# dropped the system() source that is not needed and that we enabled network
# connections using default-network-drivers(). Customize as needed and
# override using the -v option to docker, such as:
#
#  docker run ...  -v "$PWD/syslog-ng.conf":/etc/syslog-ng/syslog-ng.conf
#

@version: 4.1
@include "scl.conf"

options {
    chain_hostnames(no);
    time_reopen(10);
    time_reap(360);
    log_fifo_size(1000);
    group(adm);
    perm(0644);
    dir_perm(0755);
    use_dns(no);
    use_fqdn(yes);
    create_dirs(yes);
    keep_hostname(yes);
    log_msg_size(32768);
    stats_freq(0);
    flush_lines(0);
};

# source s_regular { tcp(port(5141)); };
# source s_cisco { tcp(port(5141) flags(no-parse,store-raw-message)); };
# source s_cisco_udp { udp(port(5152) flags(no-parse,store-raw-message)); };
source s_cisco_meraki { udp(port(5152) keep_hostname(yes)); };
source s_net { network(port(5141) keep_hostname(yes)); };
# source s_net { default-network-drivers(port(5141) flags(no-parse,store-raw-message)); };

parser p_cisco { cisco-parser(); };

destination d_cisco { file("/var/log/cisco.log"); };
destination d_promtail { syslog("promtail" transport("tcp") port(1514)); };
# destination d_fromcisco { file("/var/log/cisco.log" template(t_jsonfile)); };
# destination d_meraki { file("/var/log/meraki.log"); };

#destination to promtail is definded in promtail.conf
# log { source(s_regular); destination(d_promtail); };
# log { source(s_net); parser(p_cisco); destination(d_promtail); };
# log { source(s_cisco); parser(p_cisco); destination(d_promtail); };
# log { source(s_cisco_udp); destination(d_promtail); };
# log { source(s_cisco_meraki); destination(d_promtail); };
log { source(s_net); destination(d_promtail); };
# log { source(s_net); parser(p_cisco); destination(d_cisco); };